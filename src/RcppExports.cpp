// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// fast_lasso_sum_ess
Eigen::MatrixXd fast_lasso_sum_ess(const Eigen::VectorXd& bVec, const Eigen::VectorXd& sVec, const Eigen::MatrixXd& r2Mat, int n, const Eigen::VectorXi& group, const Eigen::VectorXd& lambda, const Eigen::VectorXd& alpha, const int maxIter);
RcppExport SEXP _fast_lasso_fast_lasso_sum_ess(SEXP bVecSEXP, SEXP sVecSEXP, SEXP r2MatSEXP, SEXP nSEXP, SEXP groupSEXP, SEXP lambdaSEXP, SEXP alphaSEXP, SEXP maxIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type bVec(bVecSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type sVec(sVecSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type r2Mat(r2MatSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXi& >::type group(groupSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const int >::type maxIter(maxIterSEXP);
    rcpp_result_gen = Rcpp::wrap(fast_lasso_sum_ess(bVec, sVec, r2Mat, n, group, lambda, alpha, maxIter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fast_lasso_fast_lasso_sum_ess", (DL_FUNC) &_fast_lasso_fast_lasso_sum_ess, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_fast_lasso(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
